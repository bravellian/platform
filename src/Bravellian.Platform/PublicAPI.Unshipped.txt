Bravellian.Platform.IMonotonicClock
Bravellian.Platform.IMonotonicClock.Seconds.get -> double
Bravellian.Platform.IMonotonicClock.Ticks.get -> long
Bravellian.Platform.IInbox
Bravellian.Platform.IInbox.AlreadyProcessedAsync(string! messageId, string! source, byte[]? hash = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>!
Bravellian.Platform.IInbox.MarkDeadAsync(string! messageId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Bravellian.Platform.IInbox.MarkProcessedAsync(string! messageId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Bravellian.Platform.IInbox.MarkProcessingAsync(string! messageId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutboxHandler
Bravellian.Platform.IOutboxHandler.HandleAsync(Bravellian.Platform.OutboxMessage! message, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutboxHandler.Topic.get -> string!
Bravellian.Platform.IOutboxHandlerResolver
Bravellian.Platform.IOutboxHandlerResolver.TryGet(string! topic, out Bravellian.Platform.IOutboxHandler! handler) -> bool
Bravellian.Platform.IOutboxStore
Bravellian.Platform.IOutboxStore.ClaimDueAsync(int limit, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Bravellian.Platform.OutboxMessage!>!>!
Bravellian.Platform.IOutboxStore.FailAsync(System.Guid id, string! lastError, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutboxStore.MarkDispatchedAsync(System.Guid id, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutboxStore.RescheduleAsync(System.Guid id, System.TimeSpan delay, string! lastError, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutbox
Bravellian.Platform.IOutbox.EnqueueAsync(string! topic, string! payload, string? correlationId = null) -> System.Threading.Tasks.Task!
Bravellian.Platform.IOutbox.EnqueueAsync(string! topic, string! payload, System.Data.IDbTransaction! transaction, string? correlationId = null) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient
Bravellian.Platform.ISchedulerClient.CancelTimerAsync(string! timerId) -> System.Threading.Tasks.Task<bool>!
Bravellian.Platform.ISchedulerClient.CreateOrUpdateJobAsync(string! jobName, string! topic, string! cronSchedule, string? payload = null) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient.DeleteJobAsync(string! jobName) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient.ScheduleTimerAsync(string! topic, string! payload, System.DateTimeOffset dueTime) -> System.Threading.Tasks.Task<string!>!
Bravellian.Platform.ISchedulerClient.TriggerJobAsync(string! jobName) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISqlDistributedLock
Bravellian.Platform.ISqlDistributedLock.AcquireAsync(string resource, System.TimeSpan timeout, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IAsyncDisposable>
Bravellian.Platform.ISystemLease
Bravellian.Platform.ISystemLease.CancellationToken.get -> System.Threading.CancellationToken
Bravellian.Platform.ISystemLease.FencingToken.get -> long
Bravellian.Platform.ISystemLease.OwnerToken.get -> System.Guid
Bravellian.Platform.ISystemLease.ResourceName.get -> string!
Bravellian.Platform.ISystemLease.ThrowIfLost() -> void
Bravellian.Platform.ISystemLease.TryRenewNowAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>!
Bravellian.Platform.ISystemLeaseFactory
Bravellian.Platform.ISystemLeaseFactory.AcquireAsync(string! resourceName, System.TimeSpan leaseDuration, string? contextJson = null, System.Guid? ownerToken = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Bravellian.Platform.ISystemLease?>!
Bravellian.Platform.LostLeaseException
Bravellian.Platform.LostLeaseException.LostLeaseException(string! resourceName, System.Guid ownerToken) -> void
Bravellian.Platform.LostLeaseException.OwnerToken.get -> System.Guid
Bravellian.Platform.LostLeaseException.ResourceName.get -> string!
Bravellian.Platform.MonoDeadline
Bravellian.Platform.MonoDeadline.AtSeconds.get -> double
Bravellian.Platform.MonoDeadline.Expired(Bravellian.Platform.IMonotonicClock! clock) -> bool
Bravellian.Platform.MonoDeadline.MonoDeadline(double AtSeconds) -> void
Bravellian.Platform.OutboxDispatcher
Bravellian.Platform.OutboxDispatcher.DefaultBackoff(int attempt) -> System.TimeSpan
Bravellian.Platform.OutboxDispatcher.OutboxDispatcher(Bravellian.Platform.IOutboxStore! store, Bravellian.Platform.IOutboxHandlerResolver! resolver, System.Func<int, System.TimeSpan>? backoffPolicy = null) -> void
Bravellian.Platform.OutboxDispatcher.RunOnceAsync(int batchSize, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
Bravellian.Platform.OutboxHandlerResolver
Bravellian.Platform.OutboxHandlerResolver.OutboxHandlerResolver(System.Collections.Generic.IEnumerable<Bravellian.Platform.IOutboxHandler!>! handlers) -> void
Bravellian.Platform.OutboxHandlerResolver.TryGet(string! topic, out Bravellian.Platform.IOutboxHandler! handler) -> bool
Bravellian.Platform.OutboxMessage
Bravellian.Platform.OutboxMessage.<Clone>$() -> Bravellian.Platform.OutboxMessage!
Bravellian.Platform.OutboxMessage.CreatedAt.get -> System.DateTimeOffset
Bravellian.Platform.OutboxMessage.Equals(Bravellian.Platform.OutboxMessage? other) -> bool
Bravellian.Platform.OutboxMessage.Id.get -> System.Guid
Bravellian.Platform.OutboxMessage.IsProcessed.get -> bool
Bravellian.Platform.OutboxMessage.LastError.get -> string
Bravellian.Platform.OutboxMessage.MessageId.get -> System.Guid
Bravellian.Platform.OutboxMessage.NextAttemptAt.get -> System.DateTimeOffset
Bravellian.Platform.OutboxMessage.OutboxMessage() -> void
Bravellian.Platform.OutboxMessage.Payload.get -> string
Bravellian.Platform.OutboxMessage.ProcessedAt.get -> System.DateTimeOffset?
Bravellian.Platform.OutboxMessage.ProcessedBy.get -> string
Bravellian.Platform.OutboxMessage.RetryCount.get -> int
Bravellian.Platform.OutboxMessage.Topic.get -> string
Bravellian.Platform.OutboxPollingService
Bravellian.Platform.OutboxPollingService.OutboxPollingService(Bravellian.Platform.OutboxDispatcher! dispatcher, Bravellian.Platform.IMonotonicClock! mono, double intervalSeconds = 0.25, int batchSize = 50, Bravellian.Platform.IDatabaseSchemaCompletion? schemaCompletion = null) -> void
Bravellian.Platform.SchedulerServiceCollectionExtensions
Bravellian.Platform.SqlInboxOptions
Bravellian.Platform.SqlInboxOptions.ConnectionString.get -> string!
Bravellian.Platform.SqlInboxOptions.ConnectionString.set -> void
Bravellian.Platform.SqlInboxOptions.SchemaName.get -> string!
Bravellian.Platform.SqlInboxOptions.SchemaName.set -> void
Bravellian.Platform.SqlInboxOptions.SqlInboxOptions() -> void
Bravellian.Platform.SqlInboxOptions.TableName.get -> string!
Bravellian.Platform.SqlInboxOptions.TableName.set -> void
Bravellian.Platform.SqlDistributedLockOptions
Bravellian.Platform.SqlSchedulerOptions
Bravellian.Platform.SqlSchedulerOptions.ConnectionString.get -> string!
Bravellian.Platform.SqlSchedulerOptions.ConnectionString.set -> void
Bravellian.Platform.SqlSchedulerOptions.EnableBackgroundWorkers.get -> bool
Bravellian.Platform.SqlSchedulerOptions.EnableBackgroundWorkers.set -> void
Bravellian.Platform.SqlSchedulerOptions.MaxPollingInterval.get -> System.TimeSpan
Bravellian.Platform.SqlSchedulerOptions.MaxPollingInterval.set -> void
Bravellian.Platform.SqlSchedulerOptions.SqlSchedulerOptions() -> void
Bravellian.Platform.SystemLeaseOptions
Bravellian.Platform.SystemLeaseOptions.ConnectionString.get -> string!
Bravellian.Platform.SystemLeaseOptions.ConnectionString.set -> void
Bravellian.Platform.SystemLeaseOptions.DefaultLeaseDuration.get -> System.TimeSpan
Bravellian.Platform.SystemLeaseOptions.DefaultLeaseDuration.set -> void
Bravellian.Platform.SystemLeaseOptions.GateTimeoutMs.get -> int
Bravellian.Platform.SystemLeaseOptions.GateTimeoutMs.set -> void
Bravellian.Platform.SystemLeaseOptions.RenewPercent.get -> double
Bravellian.Platform.SystemLeaseOptions.RenewPercent.set -> void
Bravellian.Platform.SystemLeaseOptions.SchemaName.get -> string!
Bravellian.Platform.SystemLeaseOptions.SchemaName.set -> void
Bravellian.Platform.SystemLeaseOptions.SystemLeaseOptions() -> void
Bravellian.Platform.SystemLeaseOptions.UseGate.get -> bool
Bravellian.Platform.SystemLeaseOptions.UseGate.set -> void
const Bravellian.Platform.SqlSchedulerOptions.SectionName = "SqlScheduler" -> string!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddOutboxHandler(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Func<System.IServiceProvider!, Bravellian.Platform.IOutboxHandler!>! factory) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddOutboxHandler<THandler>(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlInbox(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Bravellian.Platform.SqlInboxOptions! options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlInbox(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! connectionString, string! schemaName = "dbo", string! tableName = "Inbox") -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlOutbox(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Bravellian.Platform.SqlOutboxOptions! options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlOutbox(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! connectionString, string! schemaName = "dbo", string! tableName = "Outbox") -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlScheduler(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Microsoft.Extensions.Configuration.IConfiguration! configuration) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlScheduler(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Bravellian.Platform.SqlSchedulerOptions! options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSystemLeases(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Bravellian.Platform.SystemLeaseOptions! options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSystemLeases(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! connectionString, string! schemaName = "dbo") -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddTimeAbstractions(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.TimeProvider? timeProvider = null) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.MonoDeadline.In(Bravellian.Platform.IMonotonicClock! clock, System.TimeSpan span) -> Bravellian.Platform.MonoDeadline
Bravellian.Platform.IDatabaseSchemaCompletion
Bravellian.Platform.IDatabaseSchemaCompletion.SchemaDeploymentCompleted.get -> System.Threading.Tasks.Task!
Bravellian.Platform.SqlInboxOptions.EnableSchemaDeployment.get -> bool
Bravellian.Platform.SqlInboxOptions.EnableSchemaDeployment.set -> void
Bravellian.Platform.SqlOutboxOptions.EnableSchemaDeployment.get -> bool
Bravellian.Platform.SqlOutboxOptions.EnableSchemaDeployment.set -> void
Bravellian.Platform.SqlSchedulerOptions.EnableSchemaDeployment.get -> bool
Bravellian.Platform.SqlSchedulerOptions.EnableSchemaDeployment.set -> void
Bravellian.Platform.SqlSchedulerOptions.JobsTableName.get -> string!
Bravellian.Platform.SqlSchedulerOptions.JobsTableName.set -> void
Bravellian.Platform.SqlSchedulerOptions.JobRunsTableName.get -> string!
Bravellian.Platform.SqlSchedulerOptions.JobRunsTableName.set -> void
Bravellian.Platform.SqlSchedulerOptions.SchemaName.get -> string!
Bravellian.Platform.SqlSchedulerOptions.SchemaName.set -> void
Bravellian.Platform.SqlSchedulerOptions.TimersTableName.get -> string!
Bravellian.Platform.SqlSchedulerOptions.TimersTableName.set -> void
Bravellian.Platform.SystemLeaseOptions.EnableSchemaDeployment.get -> bool
Bravellian.Platform.SystemLeaseOptions.EnableSchemaDeployment.set -> void