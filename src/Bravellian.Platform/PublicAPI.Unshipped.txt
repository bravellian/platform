Bravellian.Platform.IOutbox
Bravellian.Platform.IOutbox.EnqueueAsync(string! topic, string! payload, System.Data.IDbTransaction! transaction, string? correlationId = null) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient
Bravellian.Platform.ISchedulerClient.CancelTimerAsync(string! timerId) -> System.Threading.Tasks.Task<bool>!
Bravellian.Platform.ISchedulerClient.CreateOrUpdateJobAsync(string! jobName, string! topic, string! cronSchedule, string? payload = null) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient.DeleteJobAsync(string! jobName) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISchedulerClient.ScheduleTimerAsync(string! topic, string! payload, System.DateTimeOffset dueTime) -> System.Threading.Tasks.Task<string!>!
Bravellian.Platform.ISchedulerClient.TriggerJobAsync(string! jobName) -> System.Threading.Tasks.Task!
Bravellian.Platform.ISqlDistributedLock
Bravellian.Platform.ISqlDistributedLock.AcquireAsync(string resource, System.TimeSpan timeout, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IAsyncDisposable>
Bravellian.Platform.ISystemLease
Bravellian.Platform.ISystemLease.CancellationToken.get -> System.Threading.CancellationToken
Bravellian.Platform.ISystemLease.FencingToken.get -> long
Bravellian.Platform.ISystemLease.OwnerToken.get -> System.Guid
Bravellian.Platform.ISystemLease.ResourceName.get -> string!
Bravellian.Platform.ISystemLease.ThrowIfLost() -> void
Bravellian.Platform.ISystemLease.TryRenewNowAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<bool>!
Bravellian.Platform.ISystemLeaseFactory
Bravellian.Platform.ISystemLeaseFactory.AcquireAsync(string! resourceName, System.TimeSpan leaseDuration, string? contextJson = null, System.Guid? ownerToken = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Bravellian.Platform.ISystemLease?>!
Bravellian.Platform.LostLeaseException
Bravellian.Platform.LostLeaseException.LostLeaseException(string! resourceName, System.Guid ownerToken) -> void
Bravellian.Platform.LostLeaseException.OwnerToken.get -> System.Guid
Bravellian.Platform.LostLeaseException.ResourceName.get -> string!
Bravellian.Platform.OutboxMessage
Bravellian.Platform.OutboxMessage.<Clone>$() -> Bravellian.Platform.OutboxMessage!
Bravellian.Platform.OutboxMessage.CreatedAt.get -> System.DateTimeOffset
Bravellian.Platform.OutboxMessage.Equals(Bravellian.Platform.OutboxMessage? other) -> bool
Bravellian.Platform.OutboxMessage.Id.get -> System.Guid
Bravellian.Platform.OutboxMessage.IsProcessed.get -> bool
Bravellian.Platform.OutboxMessage.LastError.get -> string
Bravellian.Platform.OutboxMessage.MessageId.get -> System.Guid
Bravellian.Platform.OutboxMessage.NextAttemptAt.get -> System.DateTimeOffset
Bravellian.Platform.OutboxMessage.OutboxMessage() -> void
Bravellian.Platform.OutboxMessage.Payload.get -> string
Bravellian.Platform.OutboxMessage.ProcessedAt.get -> System.DateTimeOffset?
Bravellian.Platform.OutboxMessage.ProcessedBy.get -> string
Bravellian.Platform.OutboxMessage.RetryCount.get -> int
Bravellian.Platform.OutboxMessage.Topic.get -> string
Bravellian.Platform.SchedulerServiceCollectionExtensions
Bravellian.Platform.SqlDistributedLockOptions
Bravellian.Platform.SqlSchedulerOptions
Bravellian.Platform.SqlSchedulerOptions.ConnectionString.get -> string!
Bravellian.Platform.SqlSchedulerOptions.ConnectionString.set -> void
Bravellian.Platform.SqlSchedulerOptions.EnableBackgroundWorkers.get -> bool
Bravellian.Platform.SqlSchedulerOptions.EnableBackgroundWorkers.set -> void
Bravellian.Platform.SqlSchedulerOptions.MaxPollingInterval.get -> System.TimeSpan
Bravellian.Platform.SqlSchedulerOptions.MaxPollingInterval.set -> void
Bravellian.Platform.SqlSchedulerOptions.SqlSchedulerOptions() -> void
Bravellian.Platform.SystemLeaseOptions
Bravellian.Platform.SystemLeaseOptions.ConnectionString.get -> string!
Bravellian.Platform.SystemLeaseOptions.ConnectionString.set -> void
Bravellian.Platform.SystemLeaseOptions.DefaultLeaseDuration.get -> System.TimeSpan
Bravellian.Platform.SystemLeaseOptions.DefaultLeaseDuration.set -> void
Bravellian.Platform.SystemLeaseOptions.GateTimeoutMs.get -> int
Bravellian.Platform.SystemLeaseOptions.GateTimeoutMs.set -> void
Bravellian.Platform.SystemLeaseOptions.RenewPercent.get -> double
Bravellian.Platform.SystemLeaseOptions.RenewPercent.set -> void
Bravellian.Platform.SystemLeaseOptions.SchemaName.get -> string!
Bravellian.Platform.SystemLeaseOptions.SchemaName.set -> void
Bravellian.Platform.SystemLeaseOptions.SystemLeaseOptions() -> void
Bravellian.Platform.SystemLeaseOptions.UseGate.get -> bool
Bravellian.Platform.SystemLeaseOptions.UseGate.set -> void
const Bravellian.Platform.SqlSchedulerOptions.SectionName = "SqlScheduler" -> string!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSqlScheduler(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Microsoft.Extensions.Configuration.IConfiguration! configuration) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSystemLeases(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Bravellian.Platform.SystemLeaseOptions! options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Bravellian.Platform.SchedulerServiceCollectionExtensions.AddSystemLeases(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! connectionString, string! schemaName = "pw") -> Microsoft.Extensions.DependencyInjection.IServiceCollection!